jobs:
  build:
    defaults:
      run:
        working-directory: ./example
    environment: ${{ inputs.env_name }}
    name: iOS Example Build ${{ inputs.NEW_ARCH && 'Fabric' || 'Paper' }} ${{ inputs.MAP_IMPL
      }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: ${{ inputs.ref == '' }}
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      if: ${{ inputs.ref != '' }}
      name: Checkout fork
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}
    - continue-on-error: true
      env:
        MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN || secrets.ENV_MAPBOX_ACCESS_TOKEN
          }}
      name: Access Token
      run: echo $MAPBOX_ACCESS_TOKEN > ./accesstoken
    - continue-on-error: true
      env:
        MAPBOX_DOWNLOAD_TOKEN: ${{ secrets.MAPBOX_DOWNLOAD_TOKEN || secrets.ENV_MAPBOX_DOWNLOAD_TOKEN
          }}
      if: ${{ env.MAPBOX_DOWNLOAD_TOKEN != '' }}
      name: Setup .netrc with MAPBOX_DOWNLOAD_TOKEN
      run: 'echo ''machine api.mapbox.com'' >> ~/.netrc

        echo ''login mapbox'' >> ~/.netrc

        echo "password $MAPBOX_DOWNLOAD_TOKEN" >> ~/.netrc

        chmod 0600 ~/.netrc

        '
    - continue-on-error: true
      name: Setup node ${{ inputs.NVMRC }}
      uses: actions/setup-node@v3.5.1
      with:
        node-version: ${{ inputs.NVMRC }}
    - continue-on-error: true
      id: yarn-cache
      name: Cache node_modules
      uses: actions/cache@v3
      with:
        key: node-modules-${{ hashFiles('**/yarn.lock') }}
        path: node_modules
    - continue-on-error: true
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      name: Install Yarn Dependencies
      run: yarn install --network-timeout 1000000
    - continue-on-error: true
      run: yarn postinstall
      working-directory: example
    - continue-on-error: true
      id: pods-cache
      name: Cache Pods
      uses: actions/cache@v3
      with:
        key: pods-${{ hashFiles('**/Podfile.lock') }}-${{ inputs.MAP_IMPL }}-${{ inputs.NEW_ARCH
          }}}
        path: ios/Pods
    - continue-on-error: true
      id: cocoapods-version
      name: Check CocoaPods version
      run: 'pod --version > version.txt

        cat version.txt

        echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      if: steps.cocoapods-version.outputs.version == '1.15.0'
      name: Upgrade CocoaPods
      run: sudo gem install cocoapods -v 1.15.2
    - continue-on-error: true
      env:
        CI_MAP_IMPL: ${{ inputs.MAP_IMPL }}
        NO_FLIPPER: 1
        RCT_NEW_ARCH_ENABLED: ${{ inputs.NEW_ARCH && 1 || 0 }}
      if: steps.pods-cache.outputs.cache-hit != 'true'
      name: Install Pod Dependencies
      run: cd ios && pod --version && pod update MapboxMaps hermes-engine RCT-Folly
        && pod install
    - continue-on-error: true
      name: Install Detox Dependencies
      run: 'brew tap wix/brew

        brew install applesimutils

        brew install xcbeautify

        '
    - continue-on-error: true
      name: Build for detox
      run: set -o pipefail && NSUnbufferedIO=YES  yarn detox build --configuration
        ios.debug.ci 2>&1
    - continue-on-error: true
      env:
        SKIP_TESTS_NO_METAL: ${{ inputs.MAP_IMPL == 'mapbox' || inputs.MAP_IMPL ==
          'mapbox11' }}
      if: inputs.NEW_ARCH != 1
      name: Test with detox
      run: 'npx detox --version

        yarn detox test --configuration ios.debug.ci --debug-synchronization 500 --loglevel
        trace --record-logs all --take-screenshots all  | xcbeautify -qq --renderer
        github-actions

        '
    - continue-on-error: true
      if: failure()
      name: Store Detox artifacts on test failure
      uses: actions/upload-artifact@v3
      with:
        name: detox-artifacts
        path: example/artifacts
    timeout-minutes: 55
name: iOS Build & Detox
on:
  repository_dispatch:
    types: trigger-ga___ios-actions.yml
