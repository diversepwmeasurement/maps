jobs:
  build_example:
    environment: ${{ inputs.env_name }}
    name: Android Example Build ${{ inputs.NEW_ARCH && 'Fabric' || 'Paper' }} ${{
      inputs.MAP_IMPL }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: ${{ inputs.ref == '' }}
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      if: ${{ inputs.ref != '' }}
      name: Checkout fork
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}
    - continue-on-error: true
      name: Setup node ${{ inputs.NVMRC }}
      uses: actions/setup-node@v3.5.1
      with:
        node-version: ${{ inputs.NVMRC }}
    - continue-on-error: true
      name: Setup JDK zulu 17
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: '17'
    - continue-on-error: true
      env:
        MAPBOX_DOWNLOAD_TOKEN: ${{ secrets.MAPBOX_DOWNLOAD_TOKEN || secrets.ENV_MAPBOX_DOWNLOAD_TOKEN
          }}
      run: 'mkdir -p ~/.gradle/

        echo MAPBOX_DOWNLOADS_TOKEN=$MAPBOX_DOWNLOAD_TOKEN > ~/.gradle/gradle.properties

        '
      working-directory: example
    - continue-on-error: true
      env:
        MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN || secrets.ENV_MAPBOX_ACCESS_TOKEN
          }}
      run: echo $MAPBOX_ACCESS_TOKEN > ./accesstoken
      working-directory: example
    - continue-on-error: true
      run: yarn install --network-timeout 1000000
      working-directory: example
    - continue-on-error: true
      run: yarn postinstall
      working-directory: example
    - continue-on-error: true
      env:
        CI_MAP_IMPL: ${{ inputs.MAP_IMPL }}
        ORG_GRADLE_PROJECT_newArchEnabled: ${{ inputs.NEW_ARCH && 'true' || 'false'
          }}
      run: ./gradlew assemble
      working-directory: example/android
name: Android Build
on:
  repository_dispatch:
    types: trigger-ga___android-actions.yml
